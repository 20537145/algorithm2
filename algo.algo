ALGORITHM text-analyse
VAR
    c:CHAR :="";
    nb_char:INTEGER := 0;
    nb_word:INTEGER:=0;
    nb_vow:INTEGER:=0
BEGIN
WHILE (c <> ".") DO
    read(c)
    nb_char:=nb_char + 1 
   IF (c="a" OR c="i" OR c="o" OR c="u" or c="y" or c="e") THEN
    nb_vow:=nb_vow + 1 
   END_IF

   IF (c=" ") THEN
    nb_word:=nb_word + 1 
   END_IF

END_WHILE
write("the length of the sentence is ",nb_char )
write("the nbr of words is  ",nb_word)
write("the nbr of vow is  ",nb_vow)
END

//----//

PROCEDURE dot_product(v1,v2 : ARRAY_OF integer[20], VAR dot:integer)
VAR
    i:integer
BEGIN
    i:=0
    IF (v1.length <> v2.length) THEN
        write("vectors with diffrent sizes we cannot calculate dot product")
        dot := NaN
    END_IF
    WHILE (i< v1.length) DO
        dot:= dot + v1[i]*v2[i]
    END_WHILE
END

ALGORITHM orth_vectors
VAR
    v1,v2: ARRAY_OF integer[20];
    dot:integer:=0
BEGIN
    dot_product(v1,v2,dot)
    IF (dot=0) THEN
        write("v1 and v2 are orthogonal")
    ELSE
        write("v1 and v2 are not orthogonal")
    END_IF
END

FUNCTION dot_product(v1,v2 : ARRAY_OF Number[20];) : integer
VAR
    i,dot:integer
BEGIN
    dot:=0;
    i:=0
    IF (v1.length <> v2.length) THEN
        RETURN NaN ;
    END_IF
   
END



ALGORITHM orth_vectors
VAR
    v1,v2: ARRAY_OF integer[20];
    dot:integer:=0
BEGIN
    dot:=dot_product(v1,v2)
    IF (dot=0) THEN
        write("v1 and v2 are orthogonal")
    ELSE
        write("v1 and v2 are not orthogonal")
    END_IF
END 